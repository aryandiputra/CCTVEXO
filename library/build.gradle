import com.android.builder.testing.ConnectedDeviceProvider

// Copyright (C) 2014 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

apply plugin: 'com.android.library'

android {
  compileSdkVersion 23
  buildToolsVersion "23.0.1"

  defaultConfig {
    // Important: ExoPlayerLib specifies a minSdkVersion of 9 because
    // various components provided by the library may be of use on older
    // devices. However, please note that the core video playback
    // functionality provided by the library requires API level 16 or
    // greater.
    minSdkVersion 9
    targetSdkVersion 23
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
    }
  }

  lintOptions {
    abortOnError false
  }

  packagingOptions {
    exclude 'LICENSE.txt'
  }
}

dependencies {
  compile('com.android.support:appcompat-v7:23.0.1')
  androidTestCompile 'com.google.dexmaker:dexmaker:1.2'
  androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.2'
  androidTestCompile 'org.mockito:mockito-core:1.9.5'
  androidTestCompile 'junit:junit:4.12'

  compile('com.android.support:support-annotations:23.0.1')
  androidTestCompile 'com.android.support.test:runner:0.4'
  androidTestCompile 'com.android.support.test:rules:0.4'
  androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'
  androidTestCompile 'com.android.support.test.espresso:espresso-contrib:2.2.1'
  androidTestCompile 'com.android.support.test.espresso:espresso-idling-resource:2.2.1'
  androidTestCompile ('com.squareup.okhttp3:mockwebserver:3.1.0') {
    exclude group:'org.bouncycastle', module:'bcprov-jdk15on'
  }
}

def DEVICES_PROPERTY = "devices"
ConnectedDeviceProvider.metaClass.getDevices = {
  def devices = localDevices
  if (project.hasProperty(DEVICES_PROPERTY)) {
    def devicesSerials = project.getProperties().get(DEVICES_PROPERTY).split(/,/)
    devices = localDevices.findAll { devicesSerials.contains(it.serialNumber) }
    println "[testy] ${!devices.empty ? "Execute on: ${devices.collect { it.serialNumber }}" : "Devices not found"}"
  }

  devices
}
